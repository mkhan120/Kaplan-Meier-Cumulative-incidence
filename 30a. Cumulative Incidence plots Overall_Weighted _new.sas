/**	
	PROGRAM NAME:		20.Cumulative Incidence plots_weighted_overall
	PRIMARY PROGRAMMER:	Marzan Khan

	LAST MODIFIED:		February 21, 2023

	GENERAL PURPOSE:	
		1) 

	USES DATA SET/S: 

	CREATES FINAL DATA SET/S: 
**/


*Contains all the datasets required by the hdPS macro;
libname cov "P:\sfmob\shared\Data\Covariates_nbz targettrial";

*All the datasets generated by the hdPS macro will be saved in the output library;
libname output "P:\sfmob\shared\Data\Non-bz TT subsets";

/**Read the hd-PS macro;*/
/*%include "P:\sfmob\mak\Code\Working\hdpsmacro\sas-20220505T174224Z-001\sas\hdmacros.sas";*/

*Contains the TT input datasets;
libname target_i "P:\sfmob\mak\Data\target_master_9.19.2022";

*Contains the TT output datasets;
libname target_o "P:\sfmob\shared\Data\Non-BZ hypnotic Target Trial output datasets";

*Read the program containing formats;
%include "P:\sfmob\shared\Code\General Data Management\Create NJ-SHO and other user-defined formats 2022_10_21.sas" ;

ods graphics on ;

options mprint;


%macro cuminc (effect, wt, followup, outcome, seed, type); 
*Run the lifetest  procedure to ontain sample survival probabilities;
ods graphics on;
proc lifetest data=cov.estimates_overallweights noprint outsurv=cov.sample_stats_&effect._&type;
   weight &wt;
   time &followup * &outcome(0);
   strata exposure;
run;
*255,499;

*Derive sample cumulative incidence;
data sample_stats2;
	set cov.sample_stats_&effect._&type;

	cum_inc_orig=1-SURVIVAL;
	if SDF_LCL=. then delete;
	label cum_inc_orig="Cumulative Incidence, Sample";
run;

*Generate bootsample;
%let rep = 200;
proc surveyselect data=cov.estimates_overallweights out=bootsample
     seed = &seed method = urs
	 samprate = 1 outhits rep = &rep;
run;
ods listing close;

*Run the lifetest procedure on each bootsample ;
proc lifetest data=bootsample notable noprint outsurv=bootsample_stats;
 	weight &wt;
   by replicate;
   time &followup*&outcome(0);
   strata exposure;
   label &followup='Days of follow-up';
run;


*Derive cumulative incidence;
data bootsample_stats1;
	set bootsample_stats;

	cum_incidence_bootsample=1-SURVIVAL;

	if SDF_LCL=. then delete;
	label cum_incidence_bootsample="Cumulative Incidence, bootsample";
run;

proc sort data=bootsample_stats1;
	by &followup exposure;
run;

%let alphalev = .05;
%let a1 = %sysevalf(&alphalev/2*100);
%let a2 = %sysevalf((1 - &alphalev/2)*100);
* creating confidence interval, percentile method;
proc univariate data =bootsample_stats1 alpha = .05 noprint;
  var cum_incidence_bootsample;
  by &followup exposure;
  output out=cov.pmethod_&effect mean = cum_inc pctlpts=&a1 &a2 pctlpre = p pctlname = _lb _ub ;
run;

proc sql;
	create table cov.cuminc_&effect._&type as
	select  a.cum_inc_orig, b.*, cum_inc_orig*100 as cum_inc_percent, p_ub*100 as p_ub_percent, 
	p_lb*100 as p_lb_percent
	from sample_stats2 as a 
	left join cov.pmethod_&effect as b
	 on a.&followup=b.&followup and a.exposure=b.exposure ;
quit;


proc datasets lib=work nolist;
	save formats sasmacr;
quit;


%mend;

%cuminc (itt, combo_ipw_itt, daysto_censor_itt, outcome_itt, 14892048, wt) ;
%cuminc (ppe, combo_ipw_ppe, daysto_censor_ppe, outcome_ppe, 70838476, wt) ;


